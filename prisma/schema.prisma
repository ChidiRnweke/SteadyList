// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../src/lib/generated/prisma"

}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String         @id @default(uuid())
  name          String
  email         String         @unique
  image         String?
  projects      Project[]
  tasks         Task[]
  notes         Note[]
  notifications Notification[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Project {
  id          String   @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deleted     Boolean  @default(false)
  tasks       Task[]
  notes       Note[]
  user        User     @relation(fields: [userId], references: [id])
  userId      String
}

model Task {
  id           String         @id @default(uuid())
  title        String
  description  String?
  dueDate      DateTime?
  priority     String
  status       String
  reminder     Boolean        @default(false)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  deleted      Boolean        @default(false)
  project      Project        @relation(fields: [projectId], references: [id])
  projectId    String
  user         User           @relation(fields: [userId], references: [id])
  userId       String
  notifications Notification[]
}

model Note {
  id          String    @id @default(uuid())
  title       String
  content     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deleted     Boolean   @default(false)
  shareable   Boolean   @default(false)
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  project     Project  @relation(fields: [projectId], references: [id])
  projectId   String
}

model Notification {
  id        String   @id @default(uuid())
  title     String
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  task      Task?    @relation(fields: [taskId], references: [id])
  taskId    String
  projectId String
}
